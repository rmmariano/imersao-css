/* here we are using the concept of `mobile first`, in other words
   all default code is developed to works inside mobile devices first */

/* reset all values */
* {
    margin: 0;
    padding: 0;
    /* border-box - the width and height properties (and min/max properties) includes content, padding and border.
       Source: https://www.w3schools.com/cssref/css3_pr_box-sizing.asp */
    box-sizing: border-box;
}

body {
    background-image:
        /* transparent black */
        linear-gradient(
        rgba(0, 0, 0, 0.4),
        rgba(0, 0, 0, 0.4)
        ),
        /* image */
        url('../img/crown_of_thorns.jpg');
    /* background-size: 50px 500px; */
    /* 100vh - 100% of my page absolute height
       auto - my page width is relative related to my `100vh`, then the image will not be distorted*/
    background-size: auto 100vh;
    font-family: 'Source Code Pro', monospace;
    font-size: 12px;
    height: 100vh;
}

/* create a condition to larger screens */
@media (min-width: 400px) {
    body {
        font-size: 13px;
    }
}

@media (min-width: 600px) {
    body {
        font-size: 14px;
    }
}

header {
    /* 100% of my viewport height */
    height: 100vh;
    /* all tags inside the header are now inside columns */
    display: flex;
    /* this centers the tag on the screen horizontally - this just works with flex  */
    justify-content: center;
    /* this centers the tag on the screen vertically -this just works with flex */
    align-items: center;
}

.menu {
    background-color: white;
    /* the menu will be fixed on the page */
    position: fixed;
    width: 100vw;
    /* this forces the menu to stick to the top of the screen - this just works with `position: fixed` */
    top: 0;
}

.menu li {
    list-style: none;
}

.menu ul {
    /* let the <li> tags one next to the other, instead of one under the other */
    display: flex;
    /* add a space around the <li> tags */
    justify-content: space-around;
}

.menu a {
    /* transform a inline element to a block element */
    /* to a <a> tag, the default value to display is `inline` */
    display: block;
    /* this increases the click area of my tag, in order to act as a "button"  */
    padding: 10px 20px;
}

a {
    color: grey;
    /* remove the underscore from the text */
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

.site-subtitle,
.site-title {
    color: whitesmoke;
    text-align: center;
}

.site-title {
    /* `em` is a relative length */
    /* font-size is 4 times the size of the current font (e.g. in the body) */
    font-size: 4em;
    font-family: 'MedievalSharp', cursive;
}

.site-subtitle {
    font-style: italic;
    font-family: 'Almendra', serif;
    line-height: 1.8em;
}

.project {
    padding: 2em;
    height: 100vh;
}

.project .grid {
    display: grid;
    /* this adds a grap among the figures inside the grid - this just works with `display: grid` */
    gap: 2em;
}

@media (min-width: 560px) {
    .project .grid {
        /* this forces my grid to have 2 columns with 240px */
        /* grid-template-columns: 240px 240px; */
        grid-template-columns: repeat(2, 240px);
    }
}

@media (min-width: 880px) {
    .project .grid {
        align-content: center;
        /* this forces my grid to have 3 columns with 240px */
        /* grid-template-columns: 240px 240px 240px; */
        grid-template-columns: repeat(3, 240px);
        justify-content: center;
        /* calc() calcs different types of units */
        height: calc(100vh - 8em - 48px);
    }
}

.project figure {
    text-align: center;
}

.project h2 {
    font-family: 'Almendra', serif;
    color: whitesmoke;
    margin-bottom: 1.5em;
    font-size: 2em;
}

.img-project {
    height: auto;
    width: 250px;
    /* this forces the image fits inside the passed height/width  */
    object-fit: cover;
    /* this indicates how the image should fit */
    /* object-position: left bottom; */
}

/* @media (min-width: 1200px) {
    .img-project {
        height: auto;
        width: 100%;
    }
} */
